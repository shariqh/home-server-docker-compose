version: "3"

services:

  elasticsearch:    
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1    
    container_name: elasticsearch
    environment:
      - node.name=es01 # TODO: try and remove to see what happens
      - xpack.security.enabled=true # enabled to get basic auth
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD} # bootstrap user `elastic` with the password defined
      - discovery.type=single-node # must set this to avoid bootstrap checks
      - bootstrap.memory_lock=true # stop memory swap
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # min and max heap size for the app
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./appdata/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: unless-stopped

  kibana:
    depends_on: 
      - "elasticsearch"
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTICSEARCH_URL=http://elasticsearch:9200 # calling elasticseach container through network by its name
    ports:
      - 5601:5601
    restart: unless-stopped

  logstash:
    depends_on: 
      - "elasticsearch"
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    volumes:
      - ./appdata/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./appdata/logstash/pipeline:/usr/share/logstash/pipeline
      - ./appdata/swag/log/nginx:/logstash_dir/nginx # mount log files from nginx
    ports:
      - 5044:5044 # destination port for beats
    restart: unless-stopped

  # curator:
  #   depends_on;
  #     - "elasticsearch"
  #   image: bitnami/elasticsearch-curator:5.8.3
  #   container_name: curator
  #   restart: unless-stopped
  
  # filebeat:
  #   depends_on: 
  #     - "elasticsearch"
  #   image: docker.elastic.co/beats/filebeat:7.10.1
  #   container_name: filebeat
  #   user: root
  #   command: filebeat -e -strict.perms=false # overwrite startup command so it stops checking ownership of the filebeat.yml
  #   environment:
  #     - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
  #     - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
  #     - output.elasticsearch.hosts=["elasticsearch:9200"] # calling elasticseach container through network by its name
  #     - ./appdata/swag/log/nginx:/logstash_dir/nginx # mount log files from nginx since we're not using stdout/stderr for tracking logs
  #   volumes:
  #     - ./appdata/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml
  #     # needed to access all docker logs (read only) :
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     # needed to access additional informations about containers
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: unless-stopped

  # metricbeat: 
  #   image: docker.elastic.co/beats/metricbeat:7.10.1
  #   container_name: metricbeat
  #   environment:
  #     - setup.kibana.host=kibana:5601 # calling kibana container through network by its name
  #     - output.elasticsearch.hosts=["elasticsearch:9200"] # calling elasticseach container through network by its name
  #   volumes:
  #   ports:
  #   restart: unless-stopped
