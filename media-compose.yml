services:
  # Environment variables can be found in /etc/environment

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    network_mode: host # https://docs.docker.com/network/host/
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /mnt/media/tv:/tv
      - /mnt/media/movies:/movies
      - /mnt/media/books:/books
      - /mnt/media/music:/music
      - /mnt/media/courses:/courses
      - ./appdata/plex:/config
    devices:
      - /dev/dri:/dev/dri # gives access to Intel Quicksync
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /mnt/media/movies:/movies
      - /mnt/media/downloads:/downloads
      - ./appdata/radarr:/config
      - ./appdata/transmission-openvpn/data:/data
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /mnt/media/tv:/tv
      - /mnt/media/downloads:/downloads
      - ./appdata/sonarr:/config
      - ./appdata/transmission-openvpn/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - /mnt/media/music:/music
      - /mnt/media/downloads:/downloads
      - ./appdata/lidarr/custom-services.d:/custom-services.d
      - ./appdata/lidarr/custom-cont-init.d:/custom-cont-init.d
      - ./appdata/lidarr:/config
      - ./appdata/transmission-openvpn/data:/data
    ports:
      - 8686:8686
    restart: unless-stopped

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - AUTO_UPDATE=true #optional
    volumes:
      - /mnt/media/downloads:/data/completed
      - ./appdata/jackett:/config
      - ./appdata/transmission-openvpn/data:/data
    ports:
      - 9117:9117
    restart: unless-stopped

  qbittorrent-wireguard:
    image: binhex/arch-qbittorrentvpn
    container_name: qbittorrent-wireguard
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    privileged: true
    volumes:
      - /mnt/media/downloads:/downloads
      - ./appdata/qbittorrent-wireguard:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=${PIA_USERNAME}
      - VPN_PASS=${PIA_PASSWORD}
      - VPN_PROV=pia
      - VPN_CLIENT=wireguard
      - STRICT_PORT_FORWARD=yes
      - ENABLE_PRIVOXY=no
      - LAN_NETWORK=192.168.0.0/24
      - NAME_SERVERS=${NAME_SERVERS}
      - DEBUG=false
      - WEBUI_PORT=8080
      - UMASK=000
      - PUID=1000
      - PGID=1000
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    restart: unless-stopped

  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TZ}
  #   volumes:
  #     - /appdata/readarr:/config
  #     - /mnt/media/downloads:/downloads
  #     - /mnt/media/books:/books #optional
  #   # - ./appdata/qbittorrent-wireguard/downloads:/downloads
  #     - ./appdata/transmission-openvpn/data:/data
  #   ports:
  #     - 8787:8787
  #   restart: unless-stopped
  #   networks:
  #     - home-server

  # tautulli:
  #   image: tautulli/tautulli
  #   container_name: tautulli
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TZ}
  #   volumes:
  #     - ./appdata/tautulli:/config
  #   ports:
  #     - 8181:8181
  #   restart: unless-stopped

  # ombi:
  #   image: ghcr.io/linuxserver/ombi
  #   container_name: ombi
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TZ}
  #   volumes:
  #     - ./appdata/ombi:/config
  #   ports:
  #     - 3579:3579
  #   restart: unless-stopped
# Bind to existing external network named "home-server" that already exists (must be started/created first)
# networks:
#   home-server:
#     external: true
